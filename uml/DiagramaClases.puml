@startuml DiagramaClases

Instituto "1" *--- "*" Curso
Curso "1" *--- "*" Asignatura
Curso  "1" *--- "1" Tutor
Asignatura "*" o--- "*" Profesor
Asignatura "*" o--- "*" Alumno
Asignatura "1" o--- "1" Aula
Aula "1" o--- "*" Equipamiento
Alumno "1" o--- "*" Nota
Asignatura "1" o--- "*" Nota

Persona <|-- Profesor
Persona <|-- Alumno
Profesor <|-- Tutor
Equipamiento <|-- Mesa
Equipamiento <|-- Silla
Equipamiento <|-- Ordenador
Equipamiento <|-- Proyector


class Persona {
    String nombre
    String apellidos
    datetime fechaNacimiento
    String localidad
    String provincia
    String direccion
    Number codigoPostal
    Number telefono
    int calcularEdad()
    String nombreCompleto()
    String direccionFormateada()
}
class Alumno {
    Bool repetidor
    Bool calcularPasaCurso()
    Number calcularNotaMedia()
    Bool isRepetidor()
}
class Profesor {
    datetime fechaDeContratacion
    Number dineroMes
    Number calcularNotaMedia()
    Number antiguedad()
    Number dineroTotalGanado()
}
class Tutor {
    Number cantidadDeAnyosTutorizando
    Number trieniosDeTutorizacion()
}
class Instituto {
    String nombre
    String direccion
    Number telefono
    String codigo
    Number codigoPostal
    Number fax
    String web
    String localidad
    String provincia
    String direccionFormateada()
}
class Asignatura {
    String nombre
    Number calcularNotaMediaAlumnos()
    Number totalAprobados()
    Number totalSobresalientes()
    Number totalNotables()
    Number totalAprobados()
    Number totalSuspensos()
    
}
class Curso {
    datetime comienzoDeCurso
    datetime finDeCurso
    String nombre
    Number porcentajeCursoTerminado()
}
class Aula {
    Number capacidadMaxima
    
}
class Nota {
    String nombreTarea
    Enum<tipoTarea> tipoTarea
    Number valorNumerico
    String calcularGradoNota()
}
enum tipoTarea {
  EXAMEN
  ACTIVIDAD
  PRACTICA
}
abstract Equipamiento {
    Number precio
}
class Mesa{
    int capacidad
}
class Silla{

}
@enduml